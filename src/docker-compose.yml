version: '3.4'

services:
  auctiondb:
    image: postgres
<<<<<<< Updated upstream
    networks:
      - swiped_network
    volumes:
      - postgres_auction:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=AuctionDb
    ports:
      - "5432:5432"

<<<<<<< Updated upstream
=======
  distributedcache:
    image: redis
    networks:
      - swiped_network
    ports:
      - "6379:6379"

>>>>>>> Stashed changes
  biddb:
    image: mcr.microsoft.com/mssql/server
    networks:
      - swiped_network
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SwN12345678
    ports:
      - "1433:1433"

<<<<<<< Updated upstream
=======
  jobschedulerdb:
    image: mcr.microsoft.com/mssql/server
    networks:
      - swiped_network
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SwN12345678
    ports:
      - "1434:1433"

  messagebroker:
    image: rabbitmq:management
    networks:
      - swiped_network
    hostname: bidding-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"

  contractdb:
    image: postgres
    networks:
      - swiped_network
    volumes:
      - postgres_contract:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ContractDb
    ports:
      - "5433:5432"

>>>>>>> Stashed changes
=======
    environment:
      - POSTGRES_USER=auction_user
      - POSTGRES_PASSWORD=auction_pass
      - POSTGRES_DB=auctiondb
    volumes:
      - postgres_auction:/var/lib/postgresql/data

  contractdb:
    image: postgres
    environment:
      - POSTGRES_USER=contract_user
      - POSTGRES_PASSWORD=contract_pass
      - POSTGRES_DB=contractdb
    volumes:
      - postgres_contract:/var/lib/postgresql/data

  distributedcache:
    image: redis
    container_name: distributed_cache

  biddb:
    image: mcr.microsoft.com/mssql/server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongPass!123
    ports:
      - "1433:1433"

  jobschedulerdb:
    image: mcr.microsoft.com/mssql/server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongPass!123
    ports:
      - "1434:1433"

  messagebroker:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    container_name: rabbitmq_broker

>>>>>>> Stashed changes
  auction.api:
    image: ${DOCKER_REGISTRY-}auctionapi
    build:
      context: .
      dockerfile: Services/Auction/Auction.API/Dockerfile
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
    networks:
      - swiped_network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Server=auctiondb;Port=5432;Database=AuctionDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__Redis=distributedcache:6379
      - MessageBroker__Host=amqp://bidding-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - auctiondb
      - messagebroker
      - distributedcache
    ports:
      - "6000:8080"
      - "6060:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
>>>>>>> Stashed changes
=======
    environment:
      - ASPNETCORE_URLS=http://+:5001
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - auctiondb
      - messagebroker
    ports:
      - "5001:5001"
>>>>>>> Stashed changes

  bidding.api:
    image: ${DOCKER_REGISTRY-}biddingapi
    build:
      context: .
      dockerfile: Services/Bidding/Bidding.API/Dockerfile
<<<<<<< Updated upstream
<<<<<<< Updated upstream

volumes:
  postgres_auction:    


=======
    networks:
      - swiped_network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Server=biddb;Database=BidDb;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://bidding-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
=======
    environment:
      - ASPNETCORE_URLS=http://+:5002
      - ASPNETCORE_ENVIRONMENT=Development
>>>>>>> Stashed changes
    depends_on:
      - biddb
      - messagebroker
    ports:
<<<<<<< Updated upstream
      - "6001:8080"
      - "6061:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
=======
      - "5002:5002"
>>>>>>> Stashed changes

  jobscheduler.api:
    image: ${DOCKER_REGISTRY-}jobschedulerapi
    build:
      context: .
      dockerfile: Services/JobScheduler/JobScheduler.API/Dockerfile
<<<<<<< Updated upstream
    networks:
      - swiped_network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Server=jobschedulerdb;Database=JobSchedulerDb;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://bidding-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - jobschedulerdb
      - messagebroker
    ports:
      - "6004:8080"
      - "6064:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  ml-service:
    build:
      context: ./Services/MLService
      dockerfile: Dockerfile
    container_name: ml_service
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal;Port=3307;Database=MachineLearningDB;User=User1;Password=User123;
      - MessageBroker__Host=amqp://src-messagebroker-1:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - messagebroker
    volumes:
      - ./Services/MLService/ML/Models:/app/ML/Models
    networks:
      - swiped_network
=======
    environment:
      - ASPNETCORE_URLS=http://+:5003
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - jobschedulerdb
    ports:
      - "5003:5003"

  ml-service:
    build:
      context: .  # The current directory where docker-compose.yml is located
      dockerfile: Services/MLService/Dockerfile  # Path to Dockerfile inside MLService
    container_name: ml_service
    ports:
      - "5004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal;Port=3307;Database=MachineLearningDB;User=User1;Password=User123
    volumes:
      - ./Services/MLService/ML/Models:/app/ML/Models
    depends_on:
      - messagebroker
    command: ["dotnet", "MLService.dll"]
>>>>>>> Stashed changes

  biddingresult.api:
    image: ${DOCKER_REGISTRY-}biddingresultapi
    build:
      context: .
      dockerfile: Services/BiddingResult/BiddingResult.API/Dockerfile
<<<<<<< Updated upstream
    networks:
      - swiped_network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Server=contractdb;Port=5432;Database=ContractDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - MessageBroker__Host=amqp://bidding-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - contractdb
      - messagebroker
    ports:
      - "6003:8080"
      - "6063:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

networks:
  swiped_network:
    driver: bridge
=======
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - biddb
    ports:
      - "5005:5005"

  biddingnotification.api:
    image: ${DOCKER_REGISTRY-}biddingnotificationapi
    build:
      context: .
      dockerfile: Services/BiddingNotification/BiddingNotification.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - messagebroker
    ports:
      - "5006:5006"
>>>>>>> Stashed changes

volumes:
  postgres_auction:
  postgres_contract:
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
